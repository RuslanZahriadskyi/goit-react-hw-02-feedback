{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","container","Statistics","good","neutral","bad","total","positivePercentage","paragraph","FeedbackOptions","options","onLeaveFeedback","buttons","Object","keys","map","button","type","onClick","toUpperCase","slice","length","toLowerCase","Notification","message","App","countFeedback","e","feedback","target","textContent","setState","prevFeedback","state","values","this","reduce","acc","value","totalFeedback","Math","round","countTotalFeedback","positiveFedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,UAAY,8BAA8B,UAAY,gC,oBCAxED,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,UAAY,qC,mBCAvED,EAAOC,QAAU,CAAC,MAAQ,8B,uMCgBXC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEC,UAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,gBCgBQI,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,sBAAKR,UAAWC,IAAEC,UAAlB,UACE,oBAAGF,UAAWC,IAAEQ,UAAhB,mBAAkCL,KAClC,oBAAGJ,UAAWC,IAAEQ,UAAhB,sBAAqCJ,KACrC,oBAAGL,UAAWC,IAAEQ,UAAhB,kBAAiCH,KACjC,oBAAGN,UAAWC,IAAEQ,UAAhB,oBAAmCF,KACnC,oBAAGP,UAAWC,IAAEQ,UAAhB,gCAA+CD,EAA/C,W,gBCkBSE,MAzBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC5BC,EAAUC,OAAOC,KAAKJ,GAE5B,OACE,qBAAKX,UAAWC,IAAEC,UAAlB,SACGW,EAAQG,KAAI,SAACC,GAAD,OACX,wBACEC,KAAK,SAELC,QAASP,EACTZ,UAAWC,IAAEgB,OAJf,SAMGA,EAAOG,cAAcC,MAAM,EAAG,EAAIJ,EAAOK,QACxCL,EAAOM,cAAcF,MAAM,IALxBJ,S,iBCAAO,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,oBAAIzB,UAAWC,IAAEH,MAAjB,SAAyB2B,KCkEnBC,E,kDA9Db,aAAe,IAAD,8BACZ,gBAOFC,cAAgB,SAAAC,GACd,IAAMC,EAAWD,EAAEE,OAAOC,YAC1B,EAAKC,UAAS,SAAAC,GAAY,kCACrBA,GADqB,eAElBJ,EAASN,cAAgBU,EAAaJ,EAASN,eAAiB,QAVxE,EAAKW,MAAQ,CACX9B,KAAM,EACNC,QAAS,EACTC,IAAK,GALK,E,iEAqBZ,OAJeQ,OAAOqB,OAAOC,KAAKF,OAELG,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,K,sDAKnCC,GAC9B,OAAyB,IAAlBA,EACH,EACAC,KAAKC,MAAyB,IAAlBN,KAAKF,MAAM9B,KAAcoC,K,+BAGjC,IAAD,EACwBJ,KAAKF,MAA5B9B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBkC,EAAgBJ,KAAKO,qBACrBC,EAAkBR,KAAKS,gCAAgCL,GAE7D,OACE,qCACE,cAAC,EAAD,CAAS1C,MAAM,wBAAf,SACE,cAAC,EAAD,CACEa,QAASyB,KAAKF,MACdtB,gBAAiBwB,KAAKT,kBAI1B,cAAC,EAAD,CAAS7B,MAAM,aAAf,SACqB,IAAlB0C,EACC,cAAC,EAAD,CACEpC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiC,EACPhC,mBAAoBoC,IAGtB,cAAC,EAAD,CAAcnB,QAAQ,+B,GAvDhBqB,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5a5d28f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__3V2qJ\",\"paragraph\":\"Statistics_paragraph__2NvWj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__35YbN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2tWh8\",\"container\":\"FeedbackOptions_container__3uLxw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__3byS3\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.container}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <div className={s.container}>\r\n      <p className={s.paragraph}>Good: {good}</p>\r\n      <p className={s.paragraph}>Neutral: {neutral}</p>\r\n      <p className={s.paragraph}>Bad: {bad}</p>\r\n      <p className={s.paragraph}>Total: {total}</p>\r\n      <p className={s.paragraph}>Positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  const buttons = Object.keys(options);\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      {buttons.map((button) => (\r\n        <button\r\n          type=\"button\"\r\n          key={button}\r\n          onClick={onLeaveFeedback}\r\n          className={s.button}\r\n        >\r\n          {button.toUpperCase().slice(0, 1 - button.length) +\r\n            button.toLowerCase().slice(1)}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return <h3 className={s.title}>{message}</h3>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { Component } from 'react';\nimport './App.css';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n    };\n  }\n  countFeedback = e => {\n    const feedback = e.target.textContent;\n    this.setState(prevFeedback => ({\n      ...prevFeedback,\n      ...{ [feedback.toLowerCase()]: prevFeedback[feedback.toLowerCase()] + 1 },\n    }));\n  };\n\n  countTotalFeedback() {\n    const values = Object.values(this.state);\n\n    const totalFeedback = values.reduce((acc, value) => acc + value, 0);\n\n    return totalFeedback;\n  }\n\n  countPositiveFeedbackPercentage(totalFeedback) {\n    return totalFeedback === 0\n      ? 0\n      : Math.round((this.state.good * 100) / totalFeedback);\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positiveFedback = this.countPositiveFeedbackPercentage(totalFeedback);\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.countFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {totalFeedback !== 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positivePercentage={positiveFedback}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}